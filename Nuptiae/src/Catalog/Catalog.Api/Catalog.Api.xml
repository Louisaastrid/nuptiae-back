<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Catalog.Api</name>
    </assembly>
    <members>
        <member name="M:Catalog.API.Controllers.CatalogController.Get(System.Int32,System.Int32)">
            <summary>
            Get a paginated list of the catalog destinations
            </summary>
            <param name="pageNum"> Page Num</param>
            <param name="pageSize">Page Size </param>
            <returns>Paginated list of Catalog Destinations </returns>
            <response code="200">Request successfully processed</response>
            <response code="400">Error in the request parameters</response>
        </member>
        <member name="M:Catalog.API.Controllers.CatalogController.GetTravelId(System.Int32)">
            <summary>
            get the specified destination from his id 
            </summary>
            <param name="id"></param>
            <returns>Catalog Destnations found </returns>
            <response code="200">Catalog Item with the given ID found</response>
            <response code="404">No catalog item with the given ID found</response>
        </member>
        <member name="M:Catalog.API.Controllers.CatalogController.GetTravelSearsh(System.String)">
            <summary>
            get the specified destination from his country 
            </summary>
            <param name="search"></param>
            <returns>Catalog Destnations found </returns>
            <response code="200">Catalog Item with the given ID found</response>
            <response code="404">No catalog item with the given ID found</response>
        </member>
        <member name="M:Catalog.API.Controllers.CatalogController.DeleteTrvaleById(System.Int32)">
            <summary>
            delete a destination with given id 
            </summary>
            <param name="id"></param>
            <returns>" "</returns>
            <response code="200">Catalog Item with the given ID found</response>
            <response code="204">Success no content</response>
            <response code="404">No catalog item with the given ID found</response>
        </member>
        <member name="M:Catalog.API.Controllers.CatalogController.GetTravelBySearchAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Search with Country return all country travel by name 
            </summary>
            <param name="country"></param>
            <param name="pageNum"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="T:Catalog.Api.Models.CatalogRepo">
            <summary>
            Travel catalog repository implementation.
            </summary>
            <seealso cref="T:Catalog.Api.Models.ICatalogRepo"/>
        </member>
        <member name="M:Catalog.Api.Models.CatalogRepo.#ctor(System.Func{System.Data.SqlClient.SqlConnection},System.Boolean)">
            <summary>
            Ctor.
            </summary>
            <param name="getDb">A delegate to get the SQL connection.</param>
            <param name="useCache">Indicates if cache should be used.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="getDb"/> is <c>Null</c>.</exception>
        </member>
        <member name="M:Catalog.Api.Models.CatalogRepo.GetTravelAsync(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Catalog.Api.Models.CatalogRepo.GetTravelByIdAsync(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Catalog.Api.Models.CatalogRepo.GetFirstTravelByCountryAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Catalog.Api.Models.CatalogRepo.FindTravelsByCountryAsync(System.String,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Catalog.Api.Models.CatalogRepo.RemoveTavelAsync(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Catalog.Api.Models.CatalogRepo.AddNewTravelAsync(Catalog.Api.Models.CatalogTravel)">
            <inheritdoc />
        </member>
        <member name="T:Catalog.Api.Models.CatalogTravel">
            <summary>
            Catalog travel DTO.
            </summary>
        </member>
        <member name="P:Catalog.Api.Models.CatalogTravel.Id">
            <summary>
            Identifier.
            </summary>
        </member>
        <member name="P:Catalog.Api.Models.CatalogTravel.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Catalog.Api.Models.CatalogTravel.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="P:Catalog.Api.Models.CatalogTravel.Departure">
            <summary>
            Departure date.
            </summary>
        </member>
        <member name="P:Catalog.Api.Models.CatalogTravel.Price">
            <summary>
            Price.
            </summary>
        </member>
        <member name="P:Catalog.Api.Models.CatalogTravel.Town">
            <summary>
            Town.
            </summary>
        </member>
        <member name="P:Catalog.Api.Models.CatalogTravel.Country">
            <summary>
            Country.
            </summary>
        </member>
        <member name="T:Catalog.Api.Models.ICatalogRepo">
            <summary>
            Travel catalog repository interface.
            </summary>
        </member>
        <member name="M:Catalog.Api.Models.ICatalogRepo.GetTravelAsync(System.Int32,System.Int32)">
            <summary>
            Gets paginated information about all travels.
            </summary>
            <param name="pageSize">Pagination size.</param>
            <param name="pageNum">Pagination number (starts at <c>0</c>).</param>
            <returns>All travels.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="pageSize"/> is below <c>1</c> or above <c>50</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="pageNum"/> is below <c>0</c>.</exception>
        </member>
        <member name="M:Catalog.Api.Models.ICatalogRepo.GetTravelByIdAsync(System.Int32)">
            <summary>
            Gets a single travel by its identifier.
            </summary>
            <param name="id">Travel identifier.</param>
            <returns>Travel instance or <c>Null</c>.</returns>
        </member>
        <member name="M:Catalog.Api.Models.ICatalogRepo.GetFirstTravelByCountryAsync(System.String)">
            <summary>
            Gets the first travel for the specified country.
            </summary>
            <param name="search">Country search.</param>
            <returns>Travel instance or <c>Null</c>.</returns>
        </member>
        <member name="M:Catalog.Api.Models.ICatalogRepo.RemoveTavelAsync(System.Int32)">
            <summary>
            Removes a traval.
            </summary>
            <param name="id">Travel identifier.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="M:Catalog.Api.Models.ICatalogRepo.FindTravelsByCountryAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Gets paginated information about all travels for a specified country.
            </summary>
            <param name="search">Country search.</param>
            <param name="pageSize">Pagination size.</param>
            <param name="pageNum">Pagination number (starts at <c>0</c>).</param>
            <returns>All country travels.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="pageSize"/> is below <c>1</c> or above <c>50</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="pageNum"/> is below <c>0</c>.</exception>
        </member>
        <member name="M:Catalog.Api.Models.ICatalogRepo.AddNewTravelAsync(Catalog.Api.Models.CatalogTravel)">
            <summary>
            Adds a new travel.
            </summary>
            <param name="newTravel">Travel information.</param>
            <returns>Travel identifier (<c>Null</c> if failure).</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="newTravel"/> is <c>Null</c>.</exception>
        </member>
        <member name="T:Catalog.Api.Startup">
            <summary>
            Startup.
            </summary>
        </member>
        <member name="M:Catalog.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Ctor.
            </summary>
            <param name="configuration">Instance of <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>.</param>
        </member>
        <member name="P:Catalog.Api.Startup.Configuration">
            <summary>
            Configuration.
            </summary>
        </member>
        <member name="M:Catalog.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">Instance of <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.</param>
        </member>
        <member name="M:Catalog.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">Instance of <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <param name="env">Instance of <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostEnvironment"/>.</param>
        </member>
    </members>
</doc>
